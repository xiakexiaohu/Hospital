<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gs.dao.AdminDAO">

    <resultMap id="adminResultMap" type="admin">
        <id property="id" column="id" />
        <result property="createdTime" column="created_time" />
    </resultMap>

    <select id="queryById" parameterType="string" resultMap="adminResultMap">
        <![CDATA[
        select * from t_admin where id=#{id}
        ]]>
    </select>

    <!--ibatis批量删除必须使用list不能使用String[]，会报错-->
    <!--不需要对<![CDATA[]]>对数据预先解析，否则报错-->
    <delete id="deleteByIds" parameterType="java.util.List">
        delete from t_admin where id in
        <foreach item="ids" collection="list" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>

    <select id="query" parameterType="admin" resultMap="adminResultMap">
        <![CDATA[
        select * from t_admin where email=#{email} and pwd = #{pwd}
        ]]>
    </select>

    <!--模糊查询，拼接sqsl，为了防止注入将'%#{name}%'改成 "%"#{name}"%"-->
    <select id="queryByPagerAndCriteria" resultType="list" resultMap="adminResultMap">
        <![CDATA[
        select * from t_admin where 1 = 1
        ]]>
        <if test="admin.email !=null and admin.email !=''">
            and email like concat('%',#{admin.email},'%')
        </if>
        <if test="admin.name !=null and admin.name !=''">
            and name like concat('%',#{admin.name},'%')
        </if>
        <if test="admin.phone !=null and admin.phone !=''">
            and phone like concat('%',#{admin.phone},'%')
        </if>
        order by created_time desc
        limit #{pager.beginIndex}, #{pager.pageSize}

    </select>

    <select id="countByCriteria" resultType="int">
        <![CDATA[
        select count(1) from t_admin where 1 = 1
        ]]>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="admin">
        <![CDATA[
        insert into t_admin(email, pwd, name, phone) values(#{email}, #{pwd}, #{name}, #{phone})
        ]]>
    </insert>

    <update id="update" keyProperty="id" parameterType="admin">
        <![CDATA[
        update t_admin set name = #{name}, phone = #{phone} where id = #{id}
        ]]>
    </update>

    <update id="updatePassword" keyProperty="id" parameterType="admin">
        <![CDATA[
        update t_admin set pwd = #{pwd} where id = #{id}
        ]]>
    </update>

</mapper>
